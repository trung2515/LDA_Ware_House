syntax = "proto3";
import "model.proto";
option csharp_namespace = "MineralInventory";

package client;

service Account {
    rpc SignIn (UserInfo) returns (UserReply);
    rpc ChangePassword(UserInfo) returns (Response);
    rpc InsertUser(UserInfo) returns (Response);
    rpc UpdateUser(UserInfo) returns (Response);
    rpc DeleteUser(UserInfo) returns (Response);
}

service Administrator {

    rpc GetListCodePacket(MasterRequest) returns (CodePacketResponse);
    rpc GetListEquipment(MasterRequest) returns (EquipmentResponse);
    rpc GetListPackingUnit(MasterRequest) returns (PackingUnitResponse);
    rpc GetListPartner(MasterRequest) returns (PartnerResponse);
    rpc GetListProduct(MasterRequest) returns (ProductResponse);
    rpc GetListReason(MasterRequest) returns (ReasonResponse);
    rpc GetListTypeBill(MasterRequest) returns (TypeBillResponse);
    rpc GetListTypePacket(MasterRequest) returns (TypePacketResponse);
    rpc GetListTypeProduct(MasterRequest) returns (TypeProductResponse);
    rpc GetListWareHouse(MasterRequest) returns (WareHouseResponse);
    rpc GetListWork(MasterRequest) returns (WorkResponse);
    rpc GetListTypeEquipment(MasterRequest) returns (MasterDataResponse);
    rpc GetListTypePartner(MasterRequest) returns (MasterDataResponse);
    rpc GetListUsers(MasterRequest) returns (UserResponse);
    rpc GetListDevices(MasterRequest) returns (DeviceResponse);

    rpc InsertCodePacket(CodePacketInfo) returns (Response);
    rpc UpdateCodePacket(CodePacketInfo) returns (Response);
    rpc DeleteCodePacket(CodePacketInfo) returns (Response);

    rpc InsertEquipment(EquipmentInfo) returns (Response);
    rpc UpdateEquipment(EquipmentInfo) returns (Response);
    rpc DeleteEquipment(EquipmentInfo) returns (Response);

    rpc InsertPackingUnit(PackingUnitInfo) returns (Response);
    rpc UpdatePackingUnit(PackingUnitInfo) returns (Response);
    rpc DeletePackingUnit(PackingUnitInfo) returns (Response);

    rpc InsertPartner(PartnerInfo) returns (Response);
    rpc UpdatePartner(PartnerInfo) returns (Response);
    rpc DeletePartner(PartnerInfo) returns (Response);

    rpc InsertProduct(ProductInfo) returns (Response);
    rpc UpdateProduct(ProductInfo) returns (Response);
    rpc DeleteProduct(ProductInfo) returns (Response);

    rpc InsertReason(ReasonInfo) returns (Response);
    rpc UpdateReason(ReasonInfo) returns (Response);
    rpc DeleteReason(ReasonInfo) returns (Response);

    rpc InsertTypeBill(TypeBillInfo) returns (Response);
    rpc UpdateTypeBill(TypeBillInfo) returns (Response);
    rpc DeleteTypeBill(TypeBillInfo) returns (Response);

    rpc InsertTypePacket(TypePacketInfo) returns (Response);
    rpc UpdateTypePacket(TypePacketInfo) returns (Response);
    rpc DeleteTypePacket(TypePacketInfo) returns (Response);

    rpc InsertTypeProduct(TypeProductInfo) returns (Response);
    rpc UpdateTypeProduct(TypeProductInfo) returns (Response);
    rpc DeleteTypeProduct(TypeProductInfo) returns (Response);

    rpc InsertWareHouse(WareHouseInfo) returns (Response);
    rpc UpdateWareHouse(WareHouseInfo) returns (Response);
    rpc DeleteWareHouse(WareHouseInfo) returns (Response);

    rpc InsertWork(WorkInfo) returns (Response);
    rpc UpdateWork(WorkInfo) returns (Response);
    rpc DeleteWork(WorkInfo) returns (Response);

    
    //rpc Login(UserInfo) returns (UserReply);
    

    rpc InsertDevice(DeviceInfo) returns (Response);
    rpc UpdateDevice(DeviceInfo) returns (Response);
    rpc DeleteDevice(DeviceInfo) returns (Response);
}
service WareHouse {
    rpc GetListShift(MasterRequest) returns (ShiftResponse);
    rpc GetListShiftDetail(MasterRequest) returns (ShiftDetailResponse);
    rpc GetListParcel(MasterRequest) returns (ParcelResponse);
    rpc GetListParcelDetail(MasterRequest) returns (ParcelDetailResponse);
    rpc GetListParcelDetailByCode(MasterRequest) returns (ParcelDetailResponse);


    rpc NewInsertShift(InsertShiftRequest) returns (Response);
    rpc NewUpdateShift(InsertShiftRequest) returns (Response);
    rpc DeleteShift(ShiftInfo) returns (Response);

    

   

    rpc InsertParcel(InsertParcelRequest) returns (Response);
    rpc UpdateParcel(InsertParcelRequest) returns (Response);

    rpc InsertTask(InsertTaskRequest) returns (Response);
    rpc UpdateTask(InsertTaskRequest) returns (Response);
   
}
service Card
{
    rpc InsertCard(InsertCardRequest) returns (Response);
    rpc UpdateCard(InsertCardRequest) returns (Response); 
    rpc GetListCard(MasterRequest) returns (CardResponse);
    rpc getListCardDetailByCode(MasterRequest) returns (CardDetailResponse);
    rpc SetChangeableCard(CardInfo) returns (Response);
}